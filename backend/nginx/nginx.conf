worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 443 ssl;
        server_name j12d102.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/j12d102.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/j12d102.p.ssafy.io/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Spring Boot
        location /spring/api/ {
            proxy_pass http://spring-boot:8080/spring/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # rewrite ^/spring(/.*)$ $1 break;
        }

        # FastAPI
        location /fastapi/ {
            proxy_pass http://fastapi:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            rewrite ^/fastapi(/.*)$ $1 break;
        }
    }

    server {
        listen 80;
        server_name j12d102.p.ssafy.io www.j12d102.p.ssafy.io;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
            autoindex on;
            try_files $uri =404;
        }

        # location ~ /\. {
        #    deny all;  # 숨김 파일(.env, .htaccess 등) 접근 차단
        #    return 404;
        #}

        # HTTP 요청을 HTTPS로 리디렉션
        location / {
            return 301 https://$host$request_uri;
        }
    }
}